container:
  image: cirrusci/android-sdk:30
  cpu: 4
  memory: 16G
  kvm: true

env:
  CC_TEST_REPORTER_ID: ENCRYPTED[!fe70419dfdb7debc17d3aef1ee8b996a4c9e08d42bf7d8e5a62657b37e434c4cc599ba752c1e1bac910625386c132581!]
  CC_MAPS_API_KEY: ENCRYPTED[!c95bfbac40f5fe9f371207ecfc51501f94132a3c441df1c40175e7391c20a3be3ad398671f4df6f4014b99065ad257b1!]
  GOOGLE_KEY_API : ENCRYPTED[a07be5ba98879121ccec837d5d70c321c57a7e6aa82022d4be5047ff86737d538abb54ad43a63efec2a1a07359b01b60]

#check_gitlint_task:
#  name: Gitlint
#  container:
#    image: python:latest
#  clone_script: |
#    if [ -z "$CIRRUS_PR" ]; then
#      git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
#      git reset --hard $CIRRUS_CHANGE_IN_REPO
#    else
#      git clone --recursive https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
#      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
#      git reset --hard $CIRRUS_CHANGE_IN_REPO
#    fi
#  run_gitlint_script: |
#    python3 -m pip install gitlint
#    gitlint --commits "remotes/origin/main..HEAD"

check_android_task:
  name: Run Android tests
  install_java17_script:
    apt update ;
    apt install -y openjdk-17-jdk
  install_emulator_script:
    sdkmanager --install "system-images;android-30;google_apis;x86"
  create_avd_script:
    echo no | avdmanager create avd --force
    --name emulator
    --package "system-images;android-30;google_apis;x86"
  start_avd_background_script:
    $ANDROID_HOME/emulator/emulator
    -avd emulator
    -no-audio
    -no-boot-anim
    -gpu swiftshader_indirect
    -no-snapshot
    -no-window
    -camera-back none
  assemble_instrumented_tests_script: |
    chmod +x gradlew
    echo MAPS_API_KEY=$CC_MAPS_API_KEY >> local.properties
    ./gradlew assembleDebugAndroidTest
  wait_for_avd_script:
    adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 3; done; input keyevent 82'
  disable_animations_script: |
    adb shell settings put global window_animation_scale 0.0
    adb shell settings put global transition_animation_scale 0.0
    adb shell settings put global animator_duration_scale 0.0
  prepare_codeclimate_script: |
    curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    chmod +x ./cc-test-reporter
    ./cc-test-reporter before-build
  screen_record_background_script:
    for n in $(seq 1 20); do adb exec-out screenrecord --time-limit=180 --output-format=h264 - > $n.h264; done
  check_script:
    ./gradlew check connectedCheck
  report_codeclimate_script: |
    export JACOCO_SOURCE_PATH=app/src/main/java/
    ./cc-test-reporter format-coverage ./app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml --input-type jacoco
    ./cc-test-reporter upload-coverage
  lint_script:
    ./gradlew lintDebug
  always:
    wait_for_screenrecord_script: |
      pkill -2 -x adb
      sleep 2
    screenrecord_artifacts:
      path: "*.h264"
    android_lint_artifacts:
      path: ./app/build/reports/lint-results-debug.xml
      format: android-lint
    test_artifacts:
      path: "./app/build/test-results/**/*.xml"
      format: junit
    androidtest_artifacts:
      path: "./app/build/outputs/**/*.xml"
      format: junit

